# -----------------------------------------------------------------------
## Copyright (C) 2023- by Otacilio 'Minho' Neto, <otacilio.neto@aalto.fi>
# This code is part of the 'SystemLevelControl.jl' package, licensed
# the MIT License (see <https://spdx.org/licenses/MIT.html> )                
# -----------------------------------------------------------------------
## This file defines the functions and auxiliary data-types for the 
##  dimensionality reduction of generalized plant models 

# FUNCTIONS _____________________________________________________________

function sparsity_dim_reduction(P::AbstractGeneralizedPlant, c‚±º::AbstractVector, ùì¢::AbstractVector)
    # Defines the reduced model
    if P isa AbstractGeneralizedPlant{T,StateFeedback} where T
        s‚Çì,s·µ§ = (unique(findnz((ùì¢‚±º[end]*(P.A.‚â†0))[:,c‚±º])[1]) for ùì¢‚±º in ùì¢);   
        PÃÉ = Plant(P.A[s‚Çì,s‚Çì],              P.B‚ÇÅ[s‚Çì,c‚±º],            P.B‚ÇÇ[s‚Çì,s·µ§],
                  P.C‚ÇÅ[[s‚Çì;P.Nx.+s·µ§], s‚Çì], P.D‚ÇÅ‚ÇÅ[[s‚Çì;P.Nx.+s·µ§],c‚±º], P.D‚ÇÅ‚ÇÇ[[s‚Çì;P.Nx.+s·µ§],s·µ§])
    else
        s‚Çì,s·µ§,s·µß = (unique(findnz((ùì¢‚±º[end])[:,c‚±º])[1]) for ùì¢‚±º in ùì¢);   
        PÃÉ = Plant(P.A[s‚Çì,s‚Çì],              P.B‚ÇÅ[s‚Çì,c‚±º],            P.B‚ÇÇ[s‚Çì,s·µ§],
                  P.C‚ÇÅ[[s‚Çì;P.Nx.+s·µ§], s‚Çì], P.D‚ÇÅ‚ÇÅ[ [s‚Çì;P.Nx.+s·µ§],c‚±º], P.D‚ÇÅ‚ÇÇ[[s‚Çì;P.Nx.+s·µ§],s·µ§],
                  P.C‚ÇÇ[s·µß,s‚Çì],              P.B‚ÇÅ[s·µß,c‚±º],            P.B‚ÇÇ[s·µß,s·µ§])
    end

    # Appropriate identity matrix from original state-space
    ii‚Çì = indexin(s‚Çì,c‚±º) .‚â† nothing; 
    IÃÉ = [I(PÃÉ.Nx)[:,ii‚Çì] spzeros(PÃÉ.Nx, PÃÉ.Nw-sum(ii‚Çì))] #(c‚±º[end] ‚â§ P.Nx)*I;
    # --

    return PÃÉ, IÃÉ, ii‚Çì, s‚Çì, s·µ§
end

# _______________________________________________________________________
